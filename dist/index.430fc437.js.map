{"mappings":"AAAA,KAAK,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAS;AAExD,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IAC5B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAC,EAAE,MAAM,EAAE,CAAC;QACvC,UAAU,CAAC,QAAQ,GAAI,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,qCAAqC,EAAE,CAAC,CAAC,OAAO;QACpE,CAAC,EAAE,CAAC,GAAG,IAAI;IACb,CAAC;AACH,CAAC;AAED,EAAqC,AAArC,mCAAqC;AAErC,EAAuC,AAAvC,qCAAuC;AACvC,OAAO,CAAC,GAAG,CAAC,CAAM;AAElB,KAAK,CAAC,UAAU,oBAAqB,CAAC;IACpC,EAAqC,AAArC,mCAAqC;IACrC,GAAG,CAAC,CAAC;QACH,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CACrB,EAA+C,AAA/C,6CAA+C;QAC/C,EAA8E,AAA9E,4EAA8E;SAC7E,yEAAyE;QAE5E,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,GAAI,CAAyB,AAAzB,EAAyB,AAAzB,uBAAyB;QACxD,EAA+D,AAA/D,6DAA+D;QAC/D,EAAmE,AAAnE,iEAAmE;QACnE,EAAgB,AAAhB,cAAgB;QAChB,OAAO,CAAC,GAAG,CAAC,GAAG;QACf,OAAO,CAAC,GAAG,CAAC,IAAI;QAChB,EAA0C,AAA1C,wCAA0C;QAC1C,GAAG,CAAC,CAAC,CAAC,MAAM,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAE,CAA8B,AAA9B,EAA8B,AAA9B,4BAA8B;QAC1D,MAAM,GAAG,CAAC;YACR,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,WAAW,EAAE,MAAM,CAAC,YAAY;YAChC,WAAW,EAAE,MAAM,CAAC,WAAW;QACjC,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,MAAM;QAElB,EAAsB,AAAtB,oBAAsB;QAEtB,KAAK,CAAC,MAAM,IAAI,2CACN,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,oEAEvC,EAAE,MAAM,CAAC,KAAK,CAAC,0QASsC,EACzD,MAAM,CAAC,WAAW,CACnB,kRAOyD,EACxD,MAAM,CAAC,QAAQ,CAChB,k4BAgCH,EAAE,MAAM,CAAC,WAAW,CACjB,GAAG,EAAE,GAAG,GAAK,CAAC;YACb,EAA2D,AAA3D,yDAA2D;YAC3D,MAAM,EAAE,0KAIoB,EAAE,GAAG,CAAC,QAAQ,CAAC,kFAEhB,EAAE,GAAG,CAAC,IAAI,CAAC,gBACtC,EAAE,GAAG,CAAC,WAAW,CAAC,uBAEjB;QACD,EAA2D,AAA3D,yDAA2D;QAC7D,CAAC,EACA,IAAI,CAAC,CAAE,GAAE,kOAOsB,EAC9B,MAAM,CAAC,SAAS,CACjB,8HAKK,EAAE,MAAM,CAAC,SAAS,CAAC,yLAQvB;QAEJ,eAAe,CAAC,SAAS,GAAG,CAAE;QAE9B,eAAe,CAAC,kBAAkB,CAAC,CAAY,aAAE,MAAM;IACzD,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC;QACb,EAAyB,AAAzB,uBAAyB;QACzB,KAAK,CAAC,GAAG;IACX,CAAC;AACH,CAAC;AAED,UAAU","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector(\".recipe\");\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https:forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\nconsole.log(\"Test\");\n\nconst showRecipe = async function () {\n  //await promise inside async function\n  try {\n    const res = await fetch(\n      //use url to get exact recipe returns a promise\n      // `https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886`\n      `https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc990`\n    );\n    const data = await res.json(); //returns another promise\n    //data from serer, ok property is coming from response istaself\n    // if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n    //invalid id 400\n    console.log(res);\n    console.log(data);\n    //create new object get rid of underscores\n    let { recipe } = data.data; //recipe object destructure it\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      publisher: recipe.publisher,\n      sourceUrl: recipe.source_url,\n      image: recipe.image_url,\n      servings: recipe.servings,\n      cookingTime: recipe.cooking_time,\n      ingredients: recipe.ingredients,\n    };\n    console.log(recipe);\n\n    // 2_.Rendering recipe\n\n    const markup = `<figure class=\"recipe__fig\">\n    <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n    <h1 class=\"recipe__title\">\n      <span>${recipe.title}</span>\n    </h1>\n  </figure>\n\n  <div class=\"recipe__details\">\n    <div class=\"recipe__info\">\n      <svg class=\"recipe__info-icon\">\n        <use href=\"src/img/icons.svg#icon-clock\"></use>\n      </svg>\n      <span class=\"recipe__info-data recipe__info-data--minutes\">${\n        recipe.cookingTime\n      }</span>\n      <span class=\"recipe__info-text\">minutes</span>\n    </div>\n    <div class=\"recipe__info\">\n      <svg class=\"recipe__info-icon\">\n        <use href=\"src/img/icons.svg#icon-users\"></use>\n      </svg>\n      <span class=\"recipe__info-data recipe__info-data--people\">${\n        recipe.servings\n      }</span>\n      <span class=\"recipe__info-text\">servings</span>\n\n      <div class=\"recipe__info-buttons\">\n        <button class=\"btn--tiny btn--increase-servings\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n          </svg>\n        </button>\n        <button class=\"btn--tiny btn--increase-servings\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n          </svg>\n        </button>\n      </div>\n    </div>\n\n    <div class=\"recipe__user-generated\">\n      <svg>\n        <use href=\"src/img/icons.svg#icon-user\"></use>\n      </svg>\n    </div>\n    <button class=\"btn--round\">\n      <svg class=\"\">\n        <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n      </svg>\n    </button>\n  </div>\n\n  <div class=\"recipe__ingredients\">\n    <h2 class=\"heading--2\">Recipe ingredients</h2>\n    <ul class=\"recipe__ingredient-list\">\n    ${recipe.ingredients\n      .map((ing) => {\n        //return string of html inject it in the ingredient list ul\n        return `<li class=\"recipe__ingredient\">\n      <svg class=\"recipe__icon\">\n        <use href=\"src/img/icons.svg#icon-check\"></use>\n      </svg>\n      <div class=\"recipe__quantity\">${ing.quantity}</div>\n      <div class=\"recipe__description\">\n        <span class=\"recipe__unit\">${ing.unit}</span>\n        ${ing.description}\n      </div>\n    </li>`;\n        //transform array of strings into one big string using join\n      })\n      .join(\"\")}\n  </div>\n\n  <div class=\"recipe__directions\">\n    <h2 class=\"heading--2\">How to cook it</h2>\n    <p class=\"recipe__directions-text\">\n      This recipe was carefully designed and tested by\n      <span class=\"recipe__publisher\">${\n        recipe.publisher\n      }</span>. Please check out\n      directions at their website.\n    </p>\n    <a\n      class=\"btn--small recipe__btn\"\n      href=\"${recipe.sourceUrl}\"\n      target=\"_blank\"\n    >\n      <span>Directions</span>\n      <svg class=\"search__icon\">\n        <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n      </svg>\n    </a>\n  </div>`;\n\n    recipeContainer.innerHTML = \"\";\n\n    recipeContainer.insertAdjacentHTML(\"afterbegin\", markup);\n  } catch (err) {\n    //error being caught here\n    alert(err);\n  }\n};\n\nshowRecipe();\n"],"names":[],"version":3,"file":"index.430fc437.js.map","sourceRoot":"/__parcel_source_root/"}